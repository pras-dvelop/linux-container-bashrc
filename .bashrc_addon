# Ensure rustup's cargo/bin is at the front of PATH
export PATH="$HOME/.cargo/bin:$PATH"

export PS1="\[\e[0;31m\]\u@\h\[\e[m\]:\[\e[0;32m\]\w\[\e[m\] > "
export PATH="/usr/local/go/bin:/usr/local/venv/bin:$PATH"
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=UTF-8

eval "$(dircolors -b)"
export LS_OPTIONS='--color=auto'
alias ls='ls $LS_OPTIONS'
alias ll='ls $LS_OPTIONS -l'
alias grep='grep --color=always --line-buffered'
alias fgrep='fgrep --color=always --line-buffered'

export CMAKE_GENERATOR=Ninja
export CMAKE_BUILD_TYPE=Debug
export CMAKE_COLOR_DIAGNOSTICS=ON
export CLICOLOR_FORCE=1
export LDFLAGS='-Wl,--color-diagnostics'

alias d3-cmake-debug='mkdir -p ~/d3-server/build_debug && cd ~/d3-server/build_debug && cmake -DCMAKE_BUILD_TYPE=Debug ..'
alias d3-cmake-release='mkdir -p ~/d3-server/build_release && cd ~/d3-server/build_release && cmake -DCMAKE_BUILD_TYPE=Release ..'
alias d3-build='ninja'
alias d3-build-regardless-of-errors='ninja -k 99999'
alias d3-build-non-parallel='ninja -j 1'
alias d3_isql='isql -v -k "DRIVER={MariaDB Unicode};SERVER=mysql;UID=root;PWD=Dvelop1!"'
alias d3_mysql='mysql -hmysql -uroot -pDvelop1!'
alias d3_jq='jq -r '"'"'. | "\(.time) \(.sev) \(.res.svc.name) \(.body)"'"'"
alias d3_log='tail -f /tmp/dlogserver.log | eval "${BASH_ALIASES[d3_jq]}"'

function d3-reset-conan
{
  rm -rf ~/.conan/
  rm -rf ~/.conan2/
  docker-entrypoint.sh
  echo "Conan reset done."
  echo "You will need your jFrog credentials to download the dependencies the next time you call d3-build-debug / d3-build-release"
  echo "Visit https://repo.d-velop.de/ui/user_profile to get them."
}

# Install ripgrep (rg) if not already installed
if ! command -v rg >/dev/null 2>&1; then
  echo "[.bashrc] Installing ripgrep (rg)..."
  if command -v apt-get >/dev/null 2>&1; then
    apt-get update && apt-get install -y ripgrep
  else
    echo "[.bashrc] Could not find a supported package manager to install ripgrep. Please install it manually."
  fi
fi

# Install zsh if not already installed
if ! command -v zsh >/dev/null 2>&1; then
  echo "[.bashrc] Installing zsh..."
  if command -v apt-get >/dev/null 2>&1; then
    apt-get update && apt-get install -y zsh
  else
    echo "[.bashrc] Could not find a supported package manager to install zsh. Please install it manually."
  fi
fi

# Install fzf if not already installed
if ! command -v fzf >/dev/null 2>&1; then
  echo "[.bashrc] Installing fzf..."
  if command -v apt-get >/dev/null 2>&1; then
    apt-get update && apt-get install -y fzf
  else
    echo "[.bashrc] Could not find a supported package manager to install fzf. Please install it manually."
  fi
fi

# Install bat if not already installed
if ! command -v batcat >/dev/null 2>&1 && ! command -v bat >/dev/null 2>&1; then
  echo "[.bashrc] Installing bat..."
  if command -v apt-get >/dev/null 2>&1; then
    apt-get update && apt-get install -y bat
  else
    echo "[.bashrc] Could not find a supported package manager to install bat. Please install it manually."
  fi
fi

# Alias cat to bat (batcat on Debian/Ubuntu)
if command -v batcat >/dev/null 2>&1; then
  alias cat='batcat --paging=never'
elif command -v bat >/dev/null 2>&1; then
  alias cat='bat --paging=never --style=plain'
fi

# Install eza (a modern replacement for ls) if not already installed
if ! command -v eza >/dev/null 2>&1; then
  echo "[.bashrc] Installing eza..."
  if command -v apt-get >/dev/null 2>&1; then
    # eza requires gpg and wget to add its repository
    apt-get update && apt-get install -y gpg wget
    mkdir -p /etc/apt/keyrings
    wget -qO- https://raw.githubusercontent.com/eza-community/eza/main/deb.asc | gpg --dearmor -o /etc/apt/keyrings/gierens.gpg
    echo "deb [signed-by=/etc/apt/keyrings/gierens.gpg] http://deb.gierens.de stable main" | tee /etc/apt/sources.list.d/gierens.list
    chmod 644 /etc/apt/keyrings/gierens.gpg /etc/apt/sources.list.d/gierens.list
    apt-get update && apt-get install -y eza
  else
    echo "[.bashrc] Could not find a supported package manager to install eza. Please install it manually."
  fi
fi

# Alias ls to eza with color and icons if available
if command -v eza >/dev/null 2>&1; then
  alias ls='eza --color=auto --icons'
fi

# Set zsh as default shell if not already
if command -v zsh >/dev/null 2>&1 && [ "$SHELL" != "$(command -v zsh)" ]; then
  chsh -s "$(command -v zsh)" root || true
  # If running interactively and not already in zsh, exec zsh
  if [[ $- == *i* ]] && [ -z "$ZSH_VERSION" ]; then
    exec zsh
  fi
fi